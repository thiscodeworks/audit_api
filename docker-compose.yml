version: '3.8'

services:
  web:
    container_name: api-auditbot
    image: api-auditbot
    build: .
    ports:
      - "${API_PORT}:80"
    volumes:
      - .:/var/www/html/
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ISSUER=${JWT_ISSUER}
      - JWT_AUDIENCE=${JWT_AUDIENCE}
      - FRONTEND_URL=${FRONTEND_URL}
      - POSTMARK_API_TOKEN=${POSTMARK_API_TOKEN}
      - POSTMARK_FROM_EMAIL=${POSTMARK_FROM_EMAIL}
    networks:
      - auditbot-network

  db:
    image: mariadb:10.6.12
    container_name: auditbot_db
    environment:
      MYSQL_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:3306"
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./database.sql:/docker-entrypoint-initdb.d/init.sql
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --init-file=/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MARIADB_ROOT_PASSWORD}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - auditbot-network

  adminer:
    image: adminer
    ports:
      - "${ADMINER_PORT}:8080"
    depends_on:
      - db
    networks:
      - auditbot-network

networks:
  auditbot-network:
    driver: bridge

volumes:
  mariadb_data:
    driver: local 